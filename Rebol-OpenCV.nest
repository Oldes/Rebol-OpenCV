;-    .-.                                                                       
;-   /'v'\   SISKIN-Builder 3.9.0 project file                                  
;-  (/uOu\)  https://github.com/Siskin-framework/Builder/                       
;-===="="=======================================================================

github: opencv/opencv

compiler: clang
version: 4.9.0

define: USE_TRACES

;- options common for all Rebol extensions ----------------------
#if Windows? [
	define: TO_WINDOWS
	define: _CRT_SECURE_NO_WARNINGS
]
#if macOS?   [
	define: TO_OSX
	define: HAS_BOOL
]
#if Linux? [
	define: TO_LINUX
	compiler: gcc
]

define: ENDIAN_LITTLE
define: REB_EXT

target-x86: [
	arch: x86
	#if Windows? [ defines: [ TO_WIN32 _WIN32 ] ]
	#if Linux?   [ defines: [ TO_LINUX_X86    ] ]
]
target-x64: [
	arch: x64
	defines: [
		_FILE_OFFSET_BITS=64
		__LP64__ ; has long (integer) 64 bits
	]
	#if Windows? [ defines: [ TO_WIN32_X64 _WIN32 ] ]
	#if Linux?   [ defines: [ TO_LINUX_X64        ] ]
	#if macOS?   [ defines: [ TO_OSX_X64          ] flags: ["-arch x86_64"] ]
]
target-arm64: [
	arch: arm64
	;flags: ["-arch arm64"]
	flags: "-target arm64-apple-darwin"
	define: _FILE_OFFSET_BITS=64
	define: __LP64__ ; has long (integer) 64 bits
	define: __arm64__
	define: TO_OSX_X64
]
;----------------------------------------------------------------

cflags:  [-fpermissive]
flags:   [-O2 shared]

#if Posix? [
	cflags: [-fPIC -pthread ]
	;libraries: [%pthread]
]

include-all-modules: [
	include: %opencv/modules/core/include/
	include: %opencv/modules/calib3d/include/
	include: %opencv/modules/features2d/include/
	include: %opencv/modules/flann/include/
	include: %opencv/modules/dnn/include/
	include: %opencv/modules/highgui/include/
	include: %opencv/modules/imgcodecs/include/
	include: %opencv/modules/videoio/include/
	include: %opencv/modules/imgproc/include/
	include: %opencv/modules/ml/include/
	include: %opencv/modules/objdetect/include/
	include: %opencv/modules/photo/include/
	include: %opencv/modules/stitching/include/
	include: %opencv/modules/video/include/
]

#if posix? [
	cppflag: "-std=c++11"
	lflag:   "-lstdc++"
	include: %/usr/local/include/opencv4/
	library: %/usr/local/lib/
	library: %opencv_core
	library: %opencv_features2d
	library: %opencv_highgui
	library: %opencv_imgcodecs
	library: %opencv_imgproc
	library: %opencv_videoio
]

#if Windows?  [
	compiler: clang
	include: %opencv/include/
	include: %include/
	library: %lib/
	library: %opencv_core490
	library: %opencv_features2d490
	library: %opencv_highgui490
	library: %opencv_imgcodecs490
	library: %opencv_imgproc490
	library: %opencv_videoio490
	:include-all-modules
	upx: on
]

make-extension: [
	files: [
		%src/opencv-rebol-extension.c
		%src/opencv-commands.cpp
		%src/opencv-commands-table.c
	]
	;- generate main extension header --------------------------------
	do %src/opencv-rebol-extension.r3 
]




eggs: only [
	#if (find [Linux OpenBSD FreeBSD NetBSD DragonflyBSD] system/platform) [
		"Build OpenCV libraries (cmake)" [
			;@@ https://docs.opencv.org/4.x/d7/d9f/tutorial_linux_install.html
			name: %opencv-libraries
			cmd %tmp/linux/ "cmake -G ^"Unix Makefiles^" ../../opencv/ -DCMAKE_C_COMPILER=/usr/bin/gcc -DCMAKE_CXX_COMPILER=/usr/bin/g++ -DCMAKE_BUILD_TYPE=Release -DBUILD_PERF_TESTS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DBUILD_DOCS:BOOL=OFF -DWITH_CUDA:BOOL=ON -DBUILD_EXAMPLES:BOOL=OFF -DINSTALL_CREATE_DISTRIB=OFF"
			cmd %tmp/linux/ "sudo make install -j4"
		]
	] 
	#if Windows? [
		"Build OpenCV libraries (cmake) x86" [
			name: %opencv-libraries-x86
			cmd %tmp/x86/ "cmake ../../opencv/ -A Win32 -DCMAKE_BUILD_TYPE=Release -DBUILD_PERF_TESTS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DBUILD_DOCS:BOOL=OFF -DWITH_CUDA:BOOL=ON -DBUILD_EXAMPLES:BOOL=OFF -DINSTALL_CREATE_DISTRIB=OFF"
			cmd %tmp/x86/ "cmake --build . --config release -j 4"
			cmd %tmp/x86/ "xcopy /Y bin\release\*dll ..\..\build-x86\"
			cmd %tmp/x86/ "xcopy /Y lib\release\ ..\..\lib-x86\"
			cmd %tmp/x86/ "xcopy /Y opencv2\* ..\..\include\opencv2\"
		]
		"Build OpenCV libraries (cmake) x64" [
			name: %opencv-libraries-x64
			cmd %tmp/x64/ "cmake ../../opencv/ -A x64 -DCMAKE_BUILD_TYPE=Release -DBUILD_PERF_TESTS:BOOL=OFF -DBUILD_TESTS:BOOL=OFF -DBUILD_DOCS:BOOL=OFF -DWITH_CUDA:BOOL=ON -DBUILD_EXAMPLES:BOOL=OFF -DINSTALL_CREATE_DISTRIB=OFF"
			cmd %tmp/x64/ "cmake --build . --config release -j 4"
			cmd %tmp/x64/ "xcopy /Y bin\release\*dll ..\..\build\"
			cmd %tmp/x64/ "xcopy /Y lib\release\ ..\..\lib\"
			cmd %tmp/x64/ "xcopy /Y opencv2\* ..\..\include\opencv2\"
		]

		"Rebol openCV extension: windows_x64" [
			name: %opencv-windows-x64.rebx
			:make-extension
			:target-x64
		]
	]
	#if macOS? [
		"Rebol openCV extension: macos_x64" [
			name: %opencv-macos-x64
			:make-extension
			:target-x64
		]
		"Rebol openCV extension: macos_arm64" [
			name: %opencv-macos-arm64
			:make-extension
			:target-arm64
		]
	]
	#if Linux? [
		"Rebol openCV extension: linux_x86" [
			name: %opencv-linux-x86
			:make-extension
			:target-x86
		]
		"Rebol openCV extension: linux_x64" [
			name: %opencv-linux-x64
			:make-extension
			:target-x64
		]
	]
]
